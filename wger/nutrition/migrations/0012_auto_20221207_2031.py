# Generated by Django 3.2.15 on 2022-12-07 19:31

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        ('nutrition', '0011_alter_logitem_datetime'),
    ]

    operations = [
        migrations.AddField(
            model_name='ingredient',
            name='search_column',
            field=django.contrib.postgres.search.SearchVectorField(null=True),
        ),
        migrations.AddIndex(
            model_name='ingredient',
            index=django.contrib.postgres.indexes.GinIndex(
                fields=['search_column'], name='nutrition_i_search__f274b7_gin'
            ),
        ),
        migrations.RunSQL(
            sql='''
                  CREATE TRIGGER ingredient_search_column_trigger
                  BEFORE INSERT OR UPDATE OF name, search_column
                  ON nutrition_ingredient
                  FOR EACH ROW EXECUTE PROCEDURE
                  tsvector_update_trigger(
                    search_column, 'pg_catalog.english', name
                  );

                  UPDATE nutrition_ingredient SET search_column = NULL;
                ''',
            reverse_sql='''
                  DROP TRIGGER IF EXISTS ingredient_search_column_trigger
                  ON film;
                '''
        ),
    ]
